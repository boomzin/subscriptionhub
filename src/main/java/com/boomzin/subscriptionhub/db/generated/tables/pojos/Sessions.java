/*
 * This file is generated by jOOQ.
 */
package com.boomzin.subscriptionhub.db.generated.tables.pojos;


import com.boomzin.subscriptionhub.db.generated.tables.interfaces.ISessions;

import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.18"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Sessions implements ISessions {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID userId;
    private String deviceId;
    private String token;
    private LocalDateTime lastActive;

    public Sessions() {}

    public Sessions(ISessions value) {
        this.id = value.getId();
        this.userId = value.getUserId();
        this.deviceId = value.getDeviceId();
        this.token = value.getToken();
        this.lastActive = value.getLastActive();
    }

    public Sessions(
        UUID id,
        UUID userId,
        String deviceId,
        String token,
        LocalDateTime lastActive
    ) {
        this.id = id;
        this.userId = userId;
        this.deviceId = deviceId;
        this.token = token;
        this.lastActive = lastActive;
    }

    /**
     * Getter for <code>sessions.id</code>.
     */
    @Override
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>sessions.id</code>.
     */
    @Override
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>sessions.user_id</code>.
     */
    @Override
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>sessions.user_id</code>.
     */
    @Override
    public void setUserId(UUID userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>sessions.device_id</code>.
     */
    @Override
    public String getDeviceId() {
        return this.deviceId;
    }

    /**
     * Setter for <code>sessions.device_id</code>.
     */
    @Override
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for <code>sessions.token</code>.
     */
    @Override
    public String getToken() {
        return this.token;
    }

    /**
     * Setter for <code>sessions.token</code>.
     */
    @Override
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Getter for <code>sessions.last_active</code>.
     */
    @Override
    public LocalDateTime getLastActive() {
        return this.lastActive;
    }

    /**
     * Setter for <code>sessions.last_active</code>.
     */
    @Override
    public void setLastActive(LocalDateTime lastActive) {
        this.lastActive = lastActive;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Sessions other = (Sessions) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.deviceId == null) {
            if (other.deviceId != null)
                return false;
        }
        else if (!this.deviceId.equals(other.deviceId))
            return false;
        if (this.token == null) {
            if (other.token != null)
                return false;
        }
        else if (!this.token.equals(other.token))
            return false;
        if (this.lastActive == null) {
            if (other.lastActive != null)
                return false;
        }
        else if (!this.lastActive.equals(other.lastActive))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.deviceId == null) ? 0 : this.deviceId.hashCode());
        result = prime * result + ((this.token == null) ? 0 : this.token.hashCode());
        result = prime * result + ((this.lastActive == null) ? 0 : this.lastActive.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Sessions (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(deviceId);
        sb.append(", ").append(token);
        sb.append(", ").append(lastActive);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISessions from) {
        setId(from.getId());
        setUserId(from.getUserId());
        setDeviceId(from.getDeviceId());
        setToken(from.getToken());
        setLastActive(from.getLastActive());
    }

    @Override
    public <E extends ISessions> E into(E into) {
        into.from(this);
        return into;
    }
}
