/*
 * This file is generated by jOOQ.
 */
package com.boomzin.subscriptionhub.db.generated.tables.pojos;


import com.boomzin.subscriptionhub.db.generated.tables.interfaces.IRolePermissions;

import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.18"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RolePermissions implements IRolePermissions {

    private static final long serialVersionUID = 1L;

    private UUID roleId;
    private UUID permissionId;

    public RolePermissions() {}

    public RolePermissions(IRolePermissions value) {
        this.roleId = value.getRoleId();
        this.permissionId = value.getPermissionId();
    }

    public RolePermissions(
        UUID roleId,
        UUID permissionId
    ) {
        this.roleId = roleId;
        this.permissionId = permissionId;
    }

    /**
     * Getter for <code>role_permissions.role_id</code>.
     */
    @Override
    public UUID getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>role_permissions.role_id</code>.
     */
    @Override
    public void setRoleId(UUID roleId) {
        this.roleId = roleId;
    }

    /**
     * Getter for <code>role_permissions.permission_id</code>.
     */
    @Override
    public UUID getPermissionId() {
        return this.permissionId;
    }

    /**
     * Setter for <code>role_permissions.permission_id</code>.
     */
    @Override
    public void setPermissionId(UUID permissionId) {
        this.permissionId = permissionId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RolePermissions other = (RolePermissions) obj;
        if (this.roleId == null) {
            if (other.roleId != null)
                return false;
        }
        else if (!this.roleId.equals(other.roleId))
            return false;
        if (this.permissionId == null) {
            if (other.permissionId != null)
                return false;
        }
        else if (!this.permissionId.equals(other.permissionId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.roleId == null) ? 0 : this.roleId.hashCode());
        result = prime * result + ((this.permissionId == null) ? 0 : this.permissionId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RolePermissions (");

        sb.append(roleId);
        sb.append(", ").append(permissionId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRolePermissions from) {
        setRoleId(from.getRoleId());
        setPermissionId(from.getPermissionId());
    }

    @Override
    public <E extends IRolePermissions> E into(E into) {
        into.from(this);
        return into;
    }
}
