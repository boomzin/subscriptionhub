/*
 * This file is generated by jOOQ.
 */
package com.boomzin.subscriptionhub.db.generated.tables.records;


import com.boomzin.subscriptionhub.db.generated.enums.SubscriptionStatus;
import com.boomzin.subscriptionhub.db.generated.tables.Subscriptions;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SubscriptionsRecord extends UpdatableRecordImpl<SubscriptionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>subscriptions.id</code>.
     */
    public SubscriptionsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>subscriptions.user_id</code>.
     */
    public SubscriptionsRecord setUserId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>subscriptions.type_id</code>.
     */
    public SubscriptionsRecord setTypeId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.type_id</code>.
     */
    public UUID getTypeId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>subscriptions.start_date</code>.
     */
    public SubscriptionsRecord setStartDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>subscriptions.created_at</code>.
     */
    public SubscriptionsRecord setCreatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>subscriptions.end_date</code>.
     */
    public SubscriptionsRecord setEndDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.end_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>subscriptions.status</code>.
     */
    public SubscriptionsRecord setStatus(SubscriptionStatus value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>subscriptions.status</code>.
     */
    public SubscriptionStatus getStatus() {
        return (SubscriptionStatus) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubscriptionsRecord
     */
    public SubscriptionsRecord() {
        super(Subscriptions.SUBSCRIPTIONS);
    }

    /**
     * Create a detached, initialised SubscriptionsRecord
     */
    public SubscriptionsRecord(UUID id, UUID userId, UUID typeId, LocalDateTime startDate, LocalDateTime createdAt, LocalDateTime endDate, SubscriptionStatus status) {
        super(Subscriptions.SUBSCRIPTIONS);

        setId(id);
        setUserId(userId);
        setTypeId(typeId);
        setStartDate(startDate);
        setCreatedAt(createdAt);
        setEndDate(endDate);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SubscriptionsRecord
     */
    public SubscriptionsRecord(com.boomzin.subscriptionhub.db.generated.tables.pojos.Subscriptions value) {
        super(Subscriptions.SUBSCRIPTIONS);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setTypeId(value.getTypeId());
            setStartDate(value.getStartDate());
            setCreatedAt(value.getCreatedAt());
            setEndDate(value.getEndDate());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}
