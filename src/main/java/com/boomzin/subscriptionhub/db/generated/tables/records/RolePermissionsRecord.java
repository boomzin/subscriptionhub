/*
 * This file is generated by jOOQ.
 */
package com.boomzin.subscriptionhub.db.generated.tables.records;


import com.boomzin.subscriptionhub.db.generated.tables.RolePermissions;
import com.boomzin.subscriptionhub.db.generated.tables.interfaces.IRolePermissions;

import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.18"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RolePermissionsRecord extends UpdatableRecordImpl<RolePermissionsRecord> implements IRolePermissions {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>role_permissions.role_id</code>.
     */
    @Override
    public void setRoleId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>role_permissions.role_id</code>.
     */
    @Override
    public UUID getRoleId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>role_permissions.permission_id</code>.
     */
    @Override
    public void setPermissionId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>role_permissions.permission_id</code>.
     */
    @Override
    public UUID getPermissionId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRolePermissions from) {
        setRoleId(from.getRoleId());
        setPermissionId(from.getPermissionId());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IRolePermissions> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolePermissionsRecord
     */
    public RolePermissionsRecord() {
        super(RolePermissions.ROLE_PERMISSIONS);
    }

    /**
     * Create a detached, initialised RolePermissionsRecord
     */
    public RolePermissionsRecord(UUID roleId, UUID permissionId) {
        super(RolePermissions.ROLE_PERMISSIONS);

        setRoleId(roleId);
        setPermissionId(permissionId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RolePermissionsRecord
     */
    public RolePermissionsRecord(com.boomzin.subscriptionhub.db.generated.tables.pojos.RolePermissions value) {
        super(RolePermissions.ROLE_PERMISSIONS);

        if (value != null) {
            setRoleId(value.getRoleId());
            setPermissionId(value.getPermissionId());
            resetChangedOnNotNull();
        }
    }
}
