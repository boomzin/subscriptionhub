/*
 * This file is generated by jOOQ.
 */
package com.boomzin.subscriptionhub.db.generated.tables.pojos;


import com.boomzin.subscriptionhub.db.generated.tables.interfaces.IUsers;

import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.18"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Users implements IUsers {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String email;
    private String passwordHash;
    private LocalDateTime createdAt;
    private UUID roleId;

    public Users() {}

    public Users(IUsers value) {
        this.id = value.getId();
        this.email = value.getEmail();
        this.passwordHash = value.getPasswordHash();
        this.createdAt = value.getCreatedAt();
        this.roleId = value.getRoleId();
    }

    public Users(
        UUID id,
        String email,
        String passwordHash,
        LocalDateTime createdAt,
        UUID roleId
    ) {
        this.id = id;
        this.email = email;
        this.passwordHash = passwordHash;
        this.createdAt = createdAt;
        this.roleId = roleId;
    }

    /**
     * Getter for <code>users.id</code>.
     */
    @Override
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>users.id</code>.
     */
    @Override
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>users.email</code>.
     */
    @Override
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>users.email</code>.
     */
    @Override
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>users.password_hash</code>.
     */
    @Override
    public String getPasswordHash() {
        return this.passwordHash;
    }

    /**
     * Setter for <code>users.password_hash</code>.
     */
    @Override
    public void setPasswordHash(String passwordHash) {
        this.passwordHash = passwordHash;
    }

    /**
     * Getter for <code>users.created_at</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>users.created_at</code>.
     */
    @Override
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>users.role_id</code>.
     */
    @Override
    public UUID getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>users.role_id</code>.
     */
    @Override
    public void setRoleId(UUID roleId) {
        this.roleId = roleId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.passwordHash == null) {
            if (other.passwordHash != null)
                return false;
        }
        else if (!this.passwordHash.equals(other.passwordHash))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.roleId == null) {
            if (other.roleId != null)
                return false;
        }
        else if (!this.roleId.equals(other.roleId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.passwordHash == null) ? 0 : this.passwordHash.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.roleId == null) ? 0 : this.roleId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(email);
        sb.append(", ").append(passwordHash);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(roleId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUsers from) {
        setId(from.getId());
        setEmail(from.getEmail());
        setPasswordHash(from.getPasswordHash());
        setCreatedAt(from.getCreatedAt());
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends IUsers> E into(E into) {
        into.from(this);
        return into;
    }
}
